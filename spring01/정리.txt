1. 스프링 프레임워크
- 서블릿보다 더 포괄적이고 강력한 프레임워크
- Spring MVC : 뷰로 jsp를 사용하는 구조
- Spring Boot  : 기본적으로 rest 구조(jsp를 지원X)
- Spring WebFlux : 빅데이터 처리에 초점

2. 스프링 부트에 뷰를 추가하자
- 스프링부트의 기본 템플릿(뷰만드는 기술) 기술은 thymeleaf
  부트는 jsp는 지원하지 않는다
- /src/main 폴더에 /webapp/WEB-INF/view 폴더를 추가하자
- WEB-INF 폴더는 외부에서 접근불가능한 폴더
  그래서 서블릿의 경우 /WEB-INF에 jsp를 추가하면 404
  스프링은 /WEB-INF에 jsp를 작성한다
  
3. 스프링 패키지
- 스프링의 기본 패키지는 com.example.demo
- 개발자가 패키지를 추가할 때는 항상 기본패키지.어쩌구
		controller를 추가할 경우 com.example.demo.controller여야 한다
	왜?
		예를 들어 패키지를 com.example.controller라고 했다 -> 스프링이 적용되지 X
  
4. 오버라이드와 어노테이션
- 부모가 자식에게 너 이거 이거 만들어...하고 낙인찍는 거
	class 마이서블릿 extends HttpServlet { }
- 스프링은 어노테이션으로 낙인찍는다

5. Dependency Injection(의존주입) <=> Inversion of Control(제어역전)
- @Autowired
- 종속성
		A와 B가 서로 관련되어 있다 -> 종속되어 있다
- 종속을 줄이는 방법
		어떤 팀이 스프링 설정을 잡는다 -> 스프링은 설정에 따라서 객체를 생성
		대부분의 개발자는 자기가 필요한 모듈을 스스로 생성하지 않고 주입받아서 사용
- class BoardController {
		@Autowired
		private BoardService service;
	}

6. DI를 수행하는 클래스 : ApplicationContext
- 스프링이 객체를 생성 -> Bean
	대상 : @Component와 그 자식들 
	      @Controller, @Service, @Repository
- 생성된 빈을 ApplicationContext가 관리
  @Autowired를 만나면 DI한다
	














  
  
  
  
   